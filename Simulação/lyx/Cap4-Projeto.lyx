#LyX 2.4 created this file. For more info see https://www.lyx.org/
\lyxformat 620
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass extbook
\begin_preamble
\usepackage {graphicx}
\usepackage {longtable}
\usepackage {indentfirst}
\renewenvironment{center}{\par\centering}{\par}

% Comentar linhas abaixo se não estiver usando pacote abntex
% ou se o pacote ainda não foi instalado.
% neste caso sugere-se usar citações no padrão apalike (lembra o da anbt).
%\usepackage[alf ,abnt-etal-cite=2 , abnt-year-extra-label=yes , abnt-etal-list=0]{abntcite}
%\usepackage {helvet}
%\renewcommand {\familydefault}{\sfdefault}

% Para uso de listagens de código
\usepackage{color}
\definecolor{azulclaro}{rgb}{0.6,1,1}%   rgb color model
% Informa que vai usar o pacote listings, 
% disponibilizado em /usr/share/texmf/doc/latex/styles/listings.dvi
\usepackage{listings}
\end_preamble
\use_default_options false
\master DocumentoMestre-Trabalho-ProgramacaoPratica.lyx
\maintain_unincluded_children no
\language brazilian
\language_package auto
\inputencoding auto-legacy
\fontencoding auto
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_roman_osf false
\font_sans_osf false
\font_typewriter_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement p
\paperfontsize 12
\spacing onehalf
\use_hyperref false
\papersize a4
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_formatted_ref 0
\use_minted 0
\use_lineno 0
\index Índice
\shortcut idx
\color #008000
\end_index
\paperwidth 210mm
\paperheight 297mm
\leftmargin 30mm
\topmargin 25mm
\rightmargin 20mm
\bottommargin 20mm
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tablestyle default
\tracking_changes false
\output_changes false
\change_bars false
\postpone_fragile_content false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\docbook_table_output 0
\docbook_mathml_prefix 1
\end_header

\begin_body

\begin_layout Chapter
Projeto 
\begin_inset CommandInset label
LatexCommand label
name "chap:Projeto-do-Sistema"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lhead{
\backslash
thechapter - Projeto} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Neste capítulo do projeto de engenharia veremos questões associadas ao projeto do sistema,
 incluindo protocolos,
 recursos,
 plataformas suportadas,
 inplicações nos diagramas feitos anteriormente,
 diagramas de componentes e implantação.
 Na segunda parte revisamos os diagramas levando em conta as decisões do projeto do sistema.
\end_layout

\begin_layout Section
Projeto do Sistema
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Projeto do sistema
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Projeto-do-sistema"

\end_inset


\end_layout

\begin_layout Standard
Depois da análise orientada a objeto desenvolve-se o projeto do sistema,
 qual envolve etapas como a definição dos protocolos,
 da interface API,
 o uso de recursos,
 a subdivisão do sistema em subsistemas,
 a alocação dos subsistemas ao hardware e a seleção das estruturas de controle,
 a seleção das plataformas do sistema,
 das bibliotecas externas,
 dos padrões de projeto,
 além da tomada de decisões conceituais e políticas que formam a infraestrutura do projeto.
\end_layout

\begin_layout Standard
Deve-se definir padrões de documentação,
 padrões para o nome das classes,
 padrões de retorno e de parâmetros em métodos,
 características da interface do usuário e características de desempenho.
 
\end_layout

\begin_layout Enumerate
Protocolos
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Protocolos
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
O programa realiza entrada de dados via arquivos de configuração em formato texto (.h e .cpp).
\end_layout

\begin_layout Itemize
Os dados gerados são exportados e visualizados por meio do componente externo Gnuplot,
 responsável pela geração de gráficos.
\end_layout

\begin_layout Itemize
A comunicação interna entre módulos segue protocolos baseados em interfaces orientadas a objetos.
\end_layout

\end_deeper
\begin_layout Enumerate
Recursos
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Recursos
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
O simulador utiliza recursos computacionais como CPU,
 memória RAM e disco rígido para armazenamento temporário e processamento dos dados.
\end_layout

\begin_layout Itemize
O simulador utiliza o programa externo Gnuplot que plota figuras e gráficos.
\end_layout

\begin_layout Itemize
O desenvolvimento requer compilador C++ com suporte à biblioteca FFTW para cálculos de transformadas rápidas de Fourier.
\end_layout

\end_deeper
\begin_layout Enumerate
Controle
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Controle
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
O fluxo do programa é controlado sequencialmente através da classe principal seismicSimulator,
 que coordena etapas como inicialização,
 processamento no domínio da frequência e transformação inversa.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Plataformas
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Plataformas
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
O programa é multiplataforma,
 podendo ser executado em sistemas Windows,
 Linux e macOS.
 
\end_layout

\begin_layout Itemize
O ambiente de desenvolvimento principal é baseado em compiladores compatíveis com C++ moderno (ex:
 GCC,
 Clang,
 MSVC).
\end_layout

\begin_layout Itemize
O software utilizara a biblioteca externa gnuPlotter que permite acesso ao programa Gnuplot e também a biblioteca FFTW.
 
\end_layout

\end_deeper
\begin_layout Section
Projeto Orientado a Objeto – POO
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
POO
\end_layout

\end_inset


\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Projeto orientado a objeto
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Projeto-orientado-a-objeto"

\end_inset


\end_layout

\begin_layout Standard
O projeto orientado a objeto é a etapa posterior ao projeto do sistema.
 Baseia-se na análise,
 mas considera as decisões do projeto do sistema.
 Acrescenta a análise desenvolvida e as características da plataforma escolhida (hardware,
 sistema operacional e linguagem de softwareção).
 Passa pelo maior detalhamento do funcionamento do software,
 acrescentando atributos e métodos que envolvem a solução de problemas específicos não identificados durante a análise.
\end_layout

\begin_layout Standard
Envolve a otimização da estrutura de dados e dos algoritmos,
 a minimização do tempo de execução,
 de memória e de custos.
 Existe um desvio de ênfase para os conceitos da plataforma selecionada.
 
\end_layout

\begin_layout Standard
Exemplo:
 na análise você define que existe um método para salvar um arquivo em disco,
 define um atributo nomeDoArquivo,
 mas não se preocupa com detalhes específicos da linguagem.
 Já no projeto,
 você inclui as bibliotecas necessárias para acesso ao disco,
 cria um objeto específico para acessar o disco,
 podendo,
 portanto,
 acrescentar novas classes àquelas desenvolvidas na análise.
 
\end_layout

\begin_layout Subsubsection
Efeitos do projeto no modelo
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
modelo
\end_layout

\end_inset

 estrutural
\begin_inset CommandInset label
LatexCommand label
name "subsec:Efeito-do-projeto-no-modelo-estrutural"

\end_inset


\end_layout

\begin_layout Itemize
O programa utiliza o HD,
 o processador e o teclado do computador.
\end_layout

\begin_layout Itemize
O Software pode ser executado nas plataformas GNU/Linux ou Windows.
\end_layout

\begin_layout Itemize
Existe a necessidade de instalação do software Gnuplot para o funcionamento do programa.
\end_layout

\begin_layout Subsubsection
Efeitos do projeto no modelo
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
modelo
\end_layout

\end_inset

 dinâmico
\begin_inset CommandInset label
LatexCommand label
name "subsec:Efeito-do-projeto-no-modelo-dinamico"

\end_inset


\end_layout

\begin_layout Itemize
Revisar os diagramas de seqüência e de comunicação considerando a plataforma escolhida.
\end_layout

\begin_layout Itemize
Verificar a necessidade de se revisar,
 ampliar e adicionar novos diagramas de máquinas de estado e de atividades.
 
\end_layout

\begin_layout Subsubsection
Efeitos do projeto nos atributos
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
atributos
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "subsec:Efeito-do-projeto-nos-atributos"

\end_inset


\end_layout

\begin_layout Itemize
Atributos novos podem ser adicionados a uma classe,
 como,
 por exemplo,
 atributos específicos de uma determinada linguagem de softwareção (acesso a disco,
 ponteiros,
 constantes e informações correlacionadas).
\end_layout

\begin_layout Subsubsection
Efeitos do projeto nas heranças
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
heranças
\end_layout

\end_inset


\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Efeitos do projeto nas heranças
\end_layout

\end_inset


\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Heranças
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Revise as heranças no diagrama de classes.
\end_layout

\begin_layout Subsubsection
Efeitos do projeto nas associações
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Efeitos do projeto nas associações
\end_layout

\end_inset


\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Associações
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Reorganização das associações.
\end_layout

\begin_layout Subsubsection
Efeitos do projeto nas otimizações
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
otimizações
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Uma melhoria do programa recomendada é a implementação de uma interface de entrada de dados ao inicializar o programa,
 permitindo que o usuário insira as propriedades diretamente no momento da execução.
 Essa abordagem tornaria o simulador mais acessível e amigável,
 dispensando a necessidade de interação com o código-fonte e aumentando a flexibilidade do sistema.
\end_layout

\begin_layout Standard
As dependências dos arquivos e bibliotecas podem ser descritos pelo diagrama de componentes,
 e as relações e dependências entre o sistema e o hardware podem ser ilustradas com o diagrama de implantação.
\end_layout

\begin_layout Section
Diagrama de Componentes
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Diagrama de componentes
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Diagrama-de-componentes"

\end_inset


\end_layout

\begin_layout Standard
O diagrama de componentes mostra a forma como os componentes do software se relacionam,
 suas dependências.
 Inclui itens como:
 componentes,
 subsistemas,
 executáveis,
 nós,
 associações,
 dependências,
 generalizações,
 restrições e notas.
 Exemplos de componentes são bibliotecas estáticas,
 bibliotecas dinâmicas,
 dlls,
 componentes Java,
 executáveis,
 arquivos de disco,
 código-fonte.
 
\end_layout

\begin_layout Standard
Veja na Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "cap:Diagrama-de-componentes"
nolink "false"

\end_inset

 um exemplo de diagrama de componentes.
 A partir do diagrama de componentes,
 pode-se identificar todos os arquivos necessários para a compilação e execução do software,
 bem como compreender as relações de dependências dos módulos.
 Observa-se,que o componente seismicSimulator presenta dependência direta de todos os demais componentes para seu funcionamento.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagens/diagrama do componente.png
	lyxscale 40
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagrama de componentes
\begin_inset CommandInset label
LatexCommand label
name "cap:Diagrama-de-componentes"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Diagrama de Implantação
\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Diagrama de implantação
\end_layout

\end_inset


\begin_inset Index idx
range none
pageformat default
status open

\begin_layout Plain Layout
Diagrama de execução
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Diagrama-de-execução"

\end_inset


\end_layout

\begin_layout Standard
O diagrama de implantação é um diagrama de alto nível que inclui relações entre o sistema e o hardware e que se preocupa com os aspectos da arquitetura computacional escolhida.
 Seu enfoque é o hardware,
 a configuração dos nós em tempo de execução.
 Deve incluir os elementos necessários para que o sistema seja colocado em funcionamento:
 computador,
 periféricos,
 processadores,
 dispositivos,
 nós,
 relacionamentos de dependência,
 associação,
 componentes,
 subsistemas,
 restrições e notas.
\end_layout

\begin_layout Standard
Veja na Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "cap:Diagrama-de-implantação."
nolink "false"

\end_inset

 um exemplo de diagrama de implantação utilizado.
 Para que haja um correto e realístico desempenho da simulação pelo software,
 é necessário que haja o computador com todos os hardwares requeridos.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
alignment document
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename imagens/Diagrama Implantação.png
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Diagrama de implantação
\begin_inset CommandInset label
LatexCommand label
name "cap:Diagrama-de-implantação."

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description

\end_layout

\end_body
\end_document
